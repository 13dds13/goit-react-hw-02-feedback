{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/statistics/statisticsData/StatisticsData.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onBtnClick","map","item","type","onClick","toUpperCase","slice","Section","children","title","Notification","msg","StatisticsData","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","Statistics","App","state","evt","currentBtn","target","dataset","setState","percentage","Math","round","this","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAceA,EAZS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBAAmBC,KAAK,SAAS,YAAWD,EAAME,QAASJ,EAA3D,SACGE,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,IADzBJ,SCKNK,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,oCACGA,GAAS,6BAAKA,IACdD,MCFQE,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OAAa,4BAAIA,KCkBvBC,EAlBQ,SAAC,GAMjB,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,gCACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,IAEA,OACE,gCACE,uCAAUF,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUJ,OACV,kDAAqBC,IAArB,WCUSI,EArBI,SAAC,GAOb,IANLL,EAMI,EANJA,mBACAC,EAKI,EALJA,gCACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,IACAN,EACI,EADJA,IAEA,OAAOE,IACL,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,CAAcH,IAAKA,KChBjBQ,E,4MACJC,MAAQ,CACNL,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPjB,WAAa,SAAAqB,GACX,IAAMC,EAAaD,EAAIE,OAAOC,QAAQrB,KACtC,EAAKsB,SAAL,eAAiBH,EAAa,EAAKF,MAAME,GAAc,K,EAGzDT,mBAAqB,WACnB,MAA+B,EAAKO,MACpC,OADA,EAAQL,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBH,gCAAkC,WAChC,IAAMY,EAAaC,KAAKC,MACH,IAAlB,EAAKR,MAAML,KAAc,EAAKF,sBAEjC,OAAOa,GAA0B,G,4CAGnC,WACE,MAA+BG,KAAKT,MAA5BL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASR,MAAO,6BAAhB,SACE,cAAC,EAAD,CACEV,QAAS+B,OAAOC,KAAKF,KAAKT,OAC1BpB,WAAY6B,KAAK7B,eAGrB,cAAC,EAAD,CAASS,MAAO,aAAhB,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBgB,KAAKhB,mBACzBC,gCACEe,KAAKf,gCAEPH,IAAK,+B,GA3CCqB,aAmDHb,ICnDfc,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.2c8e20d2.chunk.js","sourcesContent":["import React from 'react';\n\nconst FeedbackOptions = ({ options, onBtnClick }) => {\n  return (\n    <>\n      {options.map(item => (\n        <button key={item} type=\"button\" data-type={item} onClick={onBtnClick}>\n          {item[0].toUpperCase() + item.slice(1)}\n        </button>\n      ))}\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ msg }) => <p>{msg}</p>;\n\nexport default Notification;\n","import React from 'react';\n\nconst StatisticsData = ({\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n}) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total {countTotalFeedback()}</p>\n      <p>PositiveFeedback {countPositiveFeedbackPercentage()}%</p>\n    </div>\n  );\n};\n\nexport default StatisticsData;\n","import React from 'react';\nimport Notification from '../notification/Notification';\nimport StatisticsData from './statisticsData/StatisticsData';\n\nconst Statistics = ({\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n  msg,\n}) => {\n  return countTotalFeedback() ? (\n    <StatisticsData\n      good={good}\n      neutral={neutral}\n      bad={bad}\n      countTotalFeedback={countTotalFeedback}\n      countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n    />\n  ) : (\n    <Notification msg={msg} />\n  );\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onBtnClick = evt => {\n    const currentBtn = evt.target.dataset.type;\n    this.setState({ [currentBtn]: this.state[currentBtn] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return percentage ? percentage : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title={'Please leave Your feedback'}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onBtnClick={this.onBtnClick}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={this.countTotalFeedback}\n            countPositiveFeedbackPercentage={\n              this.countPositiveFeedbackPercentage\n            }\n            msg={'No feedback given'}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}