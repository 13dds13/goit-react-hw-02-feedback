{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","onBtnClick","type","onClick","Notification","msg","Section","children","title","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","App","state","evt","currentBtn","target","dataset","setState","percentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAkBeA,EAhBS,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OACE,qCACE,wBAAQC,KAAK,SAAS,YAAU,OAAOC,QAASF,EAAhD,kBAGA,wBAAQC,KAAK,SAAS,YAAU,UAAUC,QAASF,EAAnD,qBAGA,wBAAQC,KAAK,SAAS,YAAU,MAAMC,QAASF,EAA/C,qBCLSG,EAJM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtB,OAAO,4BAAIA,KCQEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,oCACE,6BAAKA,IACJD,MCcQE,EAlBI,SAAC,GAMb,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,gCACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,IAEA,OACE,qCACE,uCAAUF,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUJ,OACV,kDAAqBC,IAArB,WCTAI,E,4MACJC,MAAQ,CACNJ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,WAAa,SAAAgB,GACX,IAAMC,EAAaD,EAAIE,OAAOC,QAAQlB,KACtC,EAAKmB,SAAL,eAAiBH,EAAa,EAAKF,MAAME,GAAc,K,EAGzDR,mBAAqB,WACnB,MAA+B,EAAKM,MACpC,OADA,EAAQJ,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBH,gCAAkC,WAChC,IAAMW,EAAaC,KAAKC,MACH,IAAlB,EAAKR,MAAMJ,KAAc,EAAKF,sBAEjC,OAAOY,GAA0B,G,4CAGnC,WACE,MAA+BG,KAAKT,MAA5BJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASN,MAAO,6BAAhB,SACE,cAAC,EAAD,CAAiBP,WAAYwB,KAAKxB,gBAElCwB,KAAKf,sBACL,cAAC,EAAD,UACE,cAAC,EAAD,CAAcL,IAAK,0BAGpBoB,KAAKf,sBACN,cAAC,EAAD,CAASF,MAAO,aAAhB,SACE,cAAC,EAAD,CACEI,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBe,KAAKf,mBACzBC,gCACEc,KAAKd,2C,GA5CHe,aAsDHX,ICvDfY,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.046053fc.chunk.js","sourcesContent":["import React from 'react';\n\nconst FeedbackOptions = ({ onBtnClick }) => {\n  return (\n    <>\n      <button type=\"button\" data-type=\"good\" onClick={onBtnClick}>\n        Good\n      </button>\n      <button type=\"button\" data-type=\"neutral\" onClick={onBtnClick}>\n        Neutral\n      </button>\n      <button type=\"button\" data-type=\"bad\" onClick={onBtnClick}>\n        Bad\n      </button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Notification = ({ msg }) => {\n  return <p>{msg}</p>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Statistics = ({\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n}) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total {countTotalFeedback()}</p>\n      <p>PositiveFeedback {countPositiveFeedbackPercentage()}%</p>\n    </>\n  );\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Notification from './notification/Notification';\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onBtnClick = evt => {\n    const currentBtn = evt.target.dataset.type;\n    this.setState({ [currentBtn]: this.state[currentBtn] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return percentage ? percentage : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title={'Please leave Your feedback'}>\n          <FeedbackOptions onBtnClick={this.onBtnClick} />\n        </Section>\n        {!this.countTotalFeedback() && (\n          <Section>\n            <Notification msg={'No feedback given'} />\n          </Section>\n        )}\n        {!!this.countTotalFeedback() && (\n          <Section title={'Statistics'}>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              countTotalFeedback={this.countTotalFeedback}\n              countPositiveFeedbackPercentage={\n                this.countPositiveFeedbackPercentage\n              }\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}